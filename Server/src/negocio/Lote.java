package negocio;import controlador.ControladorProduccion;import dao.AlmacenamientoDAO;import dao.LoteDAO;import dao.PrendaVentaDAO;import dto.LoteDTO;import entities.LoteEntity;public class Lote {	private int idLote;	private Prenda prenda;	private OrdenDeProduccion ordenDeProduccion;	private int proceso;	private String estado;	private float costoProd;	private Almacenamiento ubicacion;	private int cantidadProducida;	private int cantidadRestante;	private boolean activo;	public Lote() {	}	public Lote(int idLote, Prenda prenda, OrdenDeProduccion ordenDeProduccion,			int proceso, String estado, float costoProd,			Almacenamiento ubicacion, int cantidadProducida,			int cantidadRestante, boolean activo) {		super();		this.idLote = idLote;		this.prenda = prenda;		this.ordenDeProduccion = ordenDeProduccion;		this.proceso = proceso;		this.estado = estado;		this.costoProd = costoProd;		this.ubicacion = ubicacion;		this.cantidadProducida = cantidadProducida;		this.cantidadRestante = cantidadRestante;		this.activo = activo;	}		public Lote(OrdenDeProduccion ordenDeProduccion, Prenda prenda,			int proceso, String estado, float costoProd,			Almacenamiento ubicacion, int cantidadProducida,			int cantidadRestante, boolean activo) {		super();		this.ordenDeProduccion = ordenDeProduccion;		this.prenda=prenda;		this.proceso = proceso;		this.estado = estado;		this.costoProd = costoProd;		this.ubicacion = ubicacion;		this.cantidadProducida = cantidadProducida;		this.cantidadRestante = cantidadRestante;		this.activo = activo;	}	public int getIdLote() {		return idLote;	}	public void setIdLote(int idLote) {		this.idLote = idLote;	}	public Prenda getPrenda() {		return prenda;	}	public void setPrenda(Prenda prenda) {		this.prenda = prenda;	}	public OrdenDeProduccion getOrdenDeProduccion() {		return ordenDeProduccion;	}	public void setOrdenDeProduccion(OrdenDeProduccion ordenDeProduccion) {		this.ordenDeProduccion = ordenDeProduccion;	}	public int getProceso() {		return proceso;	}	public void setProceso(int proceso) {		this.proceso = proceso;	}	public String getEstado() {		return estado;	}	public void setEstado(String estado) {		this.estado = estado;	}	public float getCostoProd() {		return costoProd;	}	public void setCostoProd(float costoProd) {		this.costoProd = costoProd;	}	public Almacenamiento getUbicacion() {		return ubicacion;	}	public void setUbicacion(Almacenamiento ubicacion) {		this.ubicacion = ubicacion;	}	public int getCantidadProducida() {		return cantidadProducida;	}	public void setCantidadProducida(int cantidadProducida) {		this.cantidadProducida = cantidadProducida;	}	public int getCantidadRestante() {		return cantidadRestante;	}	public void setCantidadRestante(int cantidadRestante) {		this.cantidadRestante = cantidadRestante;	}	public boolean isActivo() {		return activo;	}	public void setActivo(boolean activo) {		this.activo = activo;	}	public LoteEntity LoteToEntity() {		// TODO Auto-generated method stub		return null;	}	public LoteDTO toDTO() {		LoteDTO aux = new LoteDTO();		aux.setActivo(this.isActivo());		aux.setCantidadProducida(this.getCantidadProducida());		aux.setCantidadRestante(this.getCantidadRestante());		aux.setCostoProd(this.getCostoProd());		aux.setEstado(this.getEstado());		aux.setIdLote(this.getIdLote());		if(this.getOrdenDeProduccion()!=null){			aux.setOrdenDeProduccion(this.getOrdenDeProduccion().toDTO());		}		if(this.getPrenda()!=null){		aux.setPrenda(this.getPrenda().toDTO());		}		aux.setProceso(this.getProceso());		if(this.getUbicacion()!=null){			aux.setUbicacion(this.getUbicacion().ToDTO());		}		return aux;	}		public void Finalizado(){		this.setEstado("Finalizado");		LoteDAO.getInstancia().actualizarLote(this);	}		public void LiberarAlmacenamiento(){		this.getUbicacion().setLibre(true);		AlmacenamientoDAO.getInstance().actualizarAlmacenamiento(this.getUbicacion());	}		public void AsignarAreaProd(){		//voy a la prenda a buscar el proceso productivo, y trato de asignarle una linea		boolean aux = this.getPrenda().getEtapaProd().get(this.proceso).getAreaProductiva().asignarLinea(this);		//si el boolean es verdadero, el lote empezo a confeccionarse		if (aux == true){			this.setEstado("Produccion");		}else{			this.setEstado("Pendiente linea de produccion");		}		LoteDAO.getInstancia().actualizarLote(this);	}	public void seguirProximaEtapa() {		//Si todavia no termino de confeccionar la prenda		if(this.getPrenda().getEtapaProd().size()>this.proceso){			//sumo 1 al proceso			this.proceso++;			//busco una linea libre dentro del area correspondiente			this.AsignarAreaProd();		//si termine de confeccionarlo		}else{			//Cambio el estado, asigno la cantidad que produci			this.setEstado("Confeccionado");			this.setCantidadProducida(prenda.getCantProducir());			this.setCantidadRestante(this.cantidadProducida);			int aux = 0;			//actualizo stock			this.prenda.getStock().agregarStock(this.cantidadProducida);			//genero los prenda Venta			while(aux < this.cantidadProducida){				PrendaVenta pv = new PrendaVenta("Disponible", this, true);				this.prenda.getStock().getPrendasVenta().add(pv);				PrendaVentaDAO.getInstancia().grabarPrendaVenta(pv);							}			//notifico a la orden de produccion			this.ordenDeProduccion.prendaFinalizada(this.prenda);			//le asigno un lugar en el deposito			ControladorProduccion.getInstancia().asignarDepositoLibre(this);		}				LoteDAO.getInstancia().actualizarLote(this);			}}